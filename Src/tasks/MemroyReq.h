//
// Created by Benjo on 2020-04-12.
//

#ifndef MEMORYREQPROTO_MEMROYREQ_H
#define MEMORYREQPROTO_MEMROYREQ_H

#include <stdint.h>

#define TIME_STAMP_SIZE 32
#define GYRO_RATE_PRELAUNCH 9000 //Datasheet says 9k or 1.125k depending on config witht the FCHOICE flag
#define GYRO_RATE_LAUNCHTOAPO 9000
#define GYRO_RATE_APOTOMAIN 9000
#define GYRO_RATE_MAINTOGROUND 9000
#define GYRO_RATE_LANDED 9000
#define GYRO_SIZE (16*3 + TIME_STAMP_SIZE)

#define ACCEL_RATE_PRELAUNCH 4500 //Datasheet says 4.5k or 1.125k depending on config witht the FCHOICE flag
#define ACCEL_RATE_LAUNCHTOAPO 4500
#define ACCEL_RATE_APOTOMAIN 4500
#define ACCEL_RATE_MAINTOGROUND 4500
#define ACCEL_RATE_LANDED 4500
#define ACCEL_SIZE (16*3 + TIME_STAMP_SIZE)

#define MAG_RATE_PRELAUNCH 100
#define MAG_RATE_LAUNCHTOAPO 100
#define MAG_RATE_APOTOMAIN 100
#define MAG_RATE_MAINTOGROUND 100
#define MAG_RATE_LANDED 100
#define MAG_SIZE (16*3 + TIME_STAMP_SIZE)

#define PRES_RATE_PRELAUNCH 200
#define PRES_RATE_LAUNCHTOAPO 200
#define PRES_RATE_APOTOMAIN 200
#define PRES_RATE_MAINTOGROUND 200
#define PRES_RATE_LANDED 200
#define PRES_SIZE (24 + TIME_STAMP_SIZE)

#define TEMP_RATE_PRELAUNCH 200
#define TEMP_RATE_LAUNCHTOAPO 200
#define TEMP_RATE_APOTOMAIN 200
#define TEMP_RATE_MAINTOGROUND 200
#define TEMP_RATE_LANDED 200
#define TEMP_SIZE (24 + TIME_STAMP_SIZE)

#define CONT_RATE_PRELAUNCH 100
#define CONT_RATE_LAUNCHTOAPO 100
#define CONT_RATE_APOTOMAIN 100
#define CONT_RATE_MAINTOGROUND 100
#define CONT_RATE_LANDED 100
#define CONT_SIZE (8 + TIME_STAMP_SIZE)

#define STATE_RATE_PRELAUNCH 100
#define STATE_RATE_LAUNCHTOAPO 100
#define STATE_RATE_APOTOMAIN 100
#define STATE_RATE_MAINTOGROUND 100
#define STATE_RATE_LANDED 100
#define STATE_SIZE (8 + TIME_STAMP_SIZE)

#define PRELAUNCH 15
#define LAUNCHTOAPO 26
#define APOTOMAIN 161
#define MAINTOGROUND 78
#define LANDED 15
#define totalTime PRELAUNCH+LAUNCHTOAPO+APOTOMAIN+MAINTOGROUND+LANDED
#define MEM_BUFFER 100//num of bytes between each sector
uint32_t memoryRequired();
void partitions(uint32_t addresses[14]);
#endif //MEMORYREQPROTO_MEMROYREQ_H
